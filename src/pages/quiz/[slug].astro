---
import type { Breadcrumb } from "../../types/Breadcrumb";

import { QUIZZES } from "../../data/quiz";

import BaseLayout from "../../layouts/BaseLayout.astro";
import QuizIsland from "../../components/Quiz";

export function getStaticPaths() {
  return QUIZZES.map((quiz) => ({
    params: { slug: quiz.slug },
  }));
}
const { slug } = Astro.params;

const { title, description, level, imgSrc, imgAlt } = QUIZZES.filter(
  (quiz) => quiz.slug === slug,
)[0];

const breadCrumbs: Breadcrumb[] = [
  {
    pageName: "Accueil",
    pageUrl: "/",
  },
  {
    pageName: "Quiz",
    pageUrl: "/quiz",
  },
];
---

<BaseLayout title={title} description={description} breadcrumbs={breadCrumbs}>
  <main class="main-wrapper">
    <h1 class="quiz-title">{title}</h1>
    <p class="quiz-level">Niveau : <span>{level}</span></p>
    <div class="quiz-presentation">
      <img class="quiz-picture" src={imgSrc} alt={imgAlt} />
      <div>
        <p class="quiz-description">{description}</p>
        <button class="start-quiz-btn">Commencer le quiz</button>
      </div>
    </div>
    <div class="quiz-container hidden">
      <QuizIsland client:load slug={slug} />
    </div>
  </main>
</BaseLayout>

<style>
  .hidden {
    display: none !important;
  }

  .main-wrapper {
    width: 90%;
    margin-left: auto;
    margin-right: auto;
    max-width: 1100px;
  }

  .quiz-title {
    margin-top: 0;
    margin-bottom: 0;
  }

  .quiz-level {
    font-size: 0.75rem;
    margin-bottom: 24px;
    letter-spacing: 2px;

    span {
      font-weight: 700;
    }
  }

  .quiz-picture {
    border-radius: 8px;
    aspect-ratio: 1792 / 1024;
    object-fit: cover;
    object-position: top;
    width: 100%;
    display: block;
    margin-bottom: 16px;
  }

  .quiz-description {
    margin-bottom: 24px;
  }

  .start-quiz-btn {
    background-color: var(--buttonColorPrimary);
    width: 100%;
    border: none;
    color: var(--buttonColorPrimaryText);
    padding-top: 16px;
    padding-bottom: 16px;
    border-radius: 4px;
    cursor: pointer;
    transition: 0.4s;

    &:hover {
      background-color: var(--buttonColorPrimaryHover);
    }
  }

  @media screen and (min-width: 1024px) {
    .quiz-presentation {
      display: flex;
      gap: 48px;

      .quiz-picture,
      div {
        width: 50%;
      }

      div {
        display: flex;
        flex-direction: column;
      }
    }

    .start-quiz-btn {
      margin-top: auto;
      margin-bottom: 16px;
    }
  }
</style>

<script>
  const $quizContainer = document.querySelector(
    ".quiz-container",
  ) as HTMLElement;
  const $startQuizBtn = document.querySelector(
    ".start-quiz-btn",
  ) as HTMLButtonElement;
  const $quizPresentation = document.querySelector(
    ".quiz-presentation",
  ) as HTMLDivElement;

  $startQuizBtn.addEventListener("click", function () {
    $quizContainer.classList.remove("hidden");
    $quizPresentation.classList.add("hidden");
  });
</script>
