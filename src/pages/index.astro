---
import { NEWS } from "../data/news";

import BaseLayout from "../layouts/BaseLayout.astro";

import Banner from "../components/Banner.astro";
import Hero from "../components/Hero.astro";
import Card from "../components/Card.astro";
import Heading2 from "../components/Heading2.astro";
import Heading3 from "../components/Heading3.astro";
import NewsCard from "../components/News.astro";

type Article = {
  frontmatter: {
    kind: string;
    title: string;
    description: string;
    imgAlt: string;
    imgSrc: string;
    author: string;
    publishedDate: string;
    draft: boolean;
    level: string;
  };
  url: string;
};

const heroContentTitle = "Le rÃ©cap #4 - Juillet 2025";

const articles = Object.values(
  import.meta.glob("./articles/*.md", { eager: true }),
) as Article[];
const cheatsheets = Object.values(
  import.meta.glob("./fiches/*.md", { eager: true }),
) as Article[];

const content = cheatsheets.concat(articles);
const heroContent = content.filter(
  (c) => c.frontmatter.title === heroContentTitle,
)[0];
---

<BaseLayout>
  <main>
    <Hero
      kind={heroContent.frontmatter.kind}
      href={heroContent.url!}
      title={heroContent.frontmatter.title}
      description={heroContent.frontmatter.description}
      imgAlt={heroContent.frontmatter.imgAlt}
      imgSrc={heroContent.frontmatter.imgSrc}
      author={heroContent.frontmatter.author}
      publishedDate={heroContent.frontmatter.publishedDate}
    />
    <Banner />
    <section class="content-wrapper">
      <section class="cards-section">
        <Heading2 content="Nos derniers articles" />
        <div class="cards-wrapper">
          {
            content
              .filter(
                (c) =>
                  !c.frontmatter.draft &&
                  c.frontmatter.title !== heroContentTitle,
              )
              .sort(
                (item1, item2) =>
                  new Date(item2.frontmatter.publishedDate).getTime() -
                  new Date(item1.frontmatter.publishedDate).getTime(),
              )
              .slice(0, 8)
              .map((c) => (
                <Card
                  kind={c.frontmatter.kind}
                  href={c.url!}
                  title={c.frontmatter.title}
                  description={c.frontmatter.description}
                  level={c.frontmatter.level}
                  imgAlt={c.frontmatter.imgAlt}
                  imgSrc={c.frontmatter.imgSrc}
                  author={c.frontmatter.author}
                  publishedDate={c.frontmatter.publishedDate}
                />
              ))
          }
        </div>
      </section>
      <section class="feed-section">
        <a class="feed-link" href="/feed">
          <Heading3 content="Le Feed" />
          <svg class="chevron-icon" viewBox="0 0 24 24">
            <use xlink:href="#arrow-icon"></use>
          </svg>
        </a>
        <ul class="news-feed">
          {
            NEWS.map((news) => (
              <li>
                <NewsCard
                  content={news.content}
                  date={news.date}
                  title={news.title}
                />
              </li>
            ))
          }
        </ul>
      </section>
    </section>
  </main>
</BaseLayout>

<style>
  main {
    margin-left: auto;
    margin-right: auto;
    max-width: 1100px;
    width: 90%;
  }

  .content-wrapper {
    padding-top: 2.5rem;
    display: flex;
    flex-direction: column-reverse;

    @media screen and (min-width: 48rem) {
      padding-top: 3rem;
      display: grid;
      gap: 32px;
      grid-template-columns: 2fr 1fr;
    }

    @media screen and (min-width: 90rem) {
      gap: 40px;
    }
  }

  .cards-section {
    h2 {
      margin-bottom: 1.5rem;

      @media screen and (min-width: 48rem) {
        margin-bottom: 2rem;
      }
    }
  }

  .cards-wrapper {
    display: grid;
    gap: 2rem;

    @media screen and (min-width: 48rem) {
      grid-template-columns: repeat(2, 1fr);
      gap: 2.5rem;
    }

    @media screen and (min-width: 90rem) {
      gap: 5rem;
    }
  }

  .feed-link {
    display: flex;
    align-items: center;
    margin-bottom: 1.5rem;
    gap: 4px;

    @media screen and (min-width: 90rem) {
      margin-bottom: 2rem;
    }
  }

  .feed-link .chevron-icon {
    height: 32px;
    width: 32px;
    stroke: var(--linkColor);
  }

  .feed-section ul {
    padding-left: 0;
    list-style-type: none;
    display: flex;
    overflow: scroll;
    gap: 32px;

    @media screen and (min-width: 48rem) {
      gap: 36px;
      overflow: unset;
      flex-direction: column;
    }
  }

  .feed-section li {
    min-width: 80%;

    @media screen and (min-width: 48rem) {
      min-width: unset;
    }
  }
</style>
