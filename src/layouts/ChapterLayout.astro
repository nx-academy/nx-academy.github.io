---
type Heading = {
  depth: number;
  slug: string;
  text: string;
};

interface Props {
  frontmatter: {
    title: string;
    description: string;
    nextChapterLink: string
  };
  headings: Heading[];
}

import theme from "../config/theme";
import BaseLayout from "./BaseLayout.astro";
import Heading3 from "../components/Heading3.astro";
import Button from "../components/Button.astro";

const {
  colors: { neonGreen, neonGreenLight, black },
} = theme;

const {
  frontmatter: { title, description, nextChapterLink },
  headings,
} = Astro.props;

const sectionsHeading = headings.filter((heading) => heading.depth === 2);

const fullNextChapterLink = `/cours/docker-et-docker-compose/chapitres/${nextChapterLink}`
---

<BaseLayout title={title} description={description}>
  <div class="main-wrapper">
    <div>
        <slot />
        <div class="end-chapter-wrapper">
            <Button label="Passer au prochain chapitre" type="primary" href={fullNextChapterLink} />
        </div>
    </div>
    <div class="aside-wrapper">
      <aside>
        <Heading3 content="Contenu" />
        <ul class="chapter-content">
          {
            sectionsHeading.map((heading) => (
              <li>
                <a class="section-link" href=`#${heading.slug}`>{heading.text}</a>
              </li>
            ))
          }
        </ul>
        <Button label="Passer au prochain chapitre" type="primary" href={fullNextChapterLink} />
      </aside>
    </div>
  </div>
</BaseLayout>

<style>
  .main-wrapper {
    padding-top: 1.5rem;
    padding-bottom: 1.5rem;
    width: 90%;
    max-width: 1100px;
    margin-left: auto;
    margin-right: auto;

    @media screen and (min-width: 1024px) {
      display: grid;
      grid-template-columns: 65% 35%;
      gap: 64px;
    }
  }

  aside {
    display: none;

    @media screen and (min-width: 1024px) {
      display: initial;
      position: sticky;
      top: 24px;
    }
  }

  .chapter-content {
    margin-top: 1.75rem;
    list-style-type: none;
    padding-left: 0;
    margin-bottom: 5rem;

    li {
      margin-bottom: 1rem;
    }
  }

  .section-link {
    color: #bababa;
    
    &:hover {
        color: #4effa0;
    }
  }

  .end-chapter-wrapper {
    border-top: 1px solid #eee;
    margin-top: 4rem;
    padding-top: 4rem;
  }
</style>

<style is:global define:vars={{ neonGreen, neonGreenLight, black }}>
  img {
    max-width: 100%;
    border-radius: 8px;
  }

  article {
    max-inline-size: 66ch;
  }

  h1 {
    font-size: 2.5rem;
    margin-top: 0;
    margin-bottom: 1rem;
    color: #fefefe;
  }

  h2 {
    font-size: 1.75rem;
    margin-bottom: 1rem;
    color: #fefefe;
  }

  p {
    margin-bottom: 1.5rem;
    color: #bababa;
    font-size: clamp(0.875rem, 0.75rem + 1.5vw, 1.125rem);
  }

  ul {
    color: #bababa;
    margin-bottom: 2.5rem;
  }

  li {
    margin-bottom: 1.5rem;
    color: #bababa;
    font-size: clamp(0.875rem, 0.75rem + 1.5vw, 1.125rem);
  }

  hr {
    margin-bottom: 3rem;
    margin-top: 2rem;
  }

  a {
    text-decoration: none;
    color: var(--neonGreen);
    font-weight: 500;
    transition: 0.4s color;

    &:hover {
      color: var(--neonGreenLight);
    }
  }

  p > code {
    background-color: var(--neonGreen);
    padding: 0.25rem;
    color: var(--black);
  }

  pre,
  ul {
    margin-bottom: 1.75rem;
  }

  blockquote {
    padding-left: 2rem;
    font-style: italic;
  }
</style>
